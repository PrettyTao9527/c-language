关于删除文件的那点事：（前提是文件已经被提交过，否则……）

1.删除方法一：直接执行命名"rm test.txt",单独对工作去执行了删除操作，
  没有把删除记录添加到暂存区，这就有点像直接在工作区目录中右键删除；
   那么此时如果想恢复文件，也就是撤销刚才的删除操作咋整呢？
   试一下命令"git checkout -- test.txt" or "git restore test.txt"; 经测试，可行！
   可我自己给自己整了个bug！是这样的，一开始创建空的test.txt提交后，
   执行删除，又会通过版本回退，找回了原始文件。那么此时我编辑该文件后保存，
   我开始测试上面提到的删除和恢复操作，然后再看文件，空的！懵了？
  反思：原来刚才我编辑文件的时候没有进行提交操作！意外吧，哈哈哈。

2.删除方法二：执行命令"git rm test.txt"后会把删除操作一并添加到了暂存区，那么这个
  命令就等价于"rm test.txt"+"git add test.txt"; 那么此时该如何恢复文件呢？？
  同样的道理，既然暂存区做了修改，那么撤销暂存区的修改即可，执行命令
  "git reset HEAD test.txt",此时只是撤销了暂存区的修改，
  相当于撤销了"git add test.txt"这一步，还没有恢复文件，需要执行"git checkout -- test.txt"
  or  "git restore test.txt",此时才算恢复文件。

3.特殊情况，如果文件只是git add, 但没有commit，那么执行删除操作会如何？又如何恢复呢？
情况一，可以执行"rm filename"删除，同时也可以执行"git restore filename"来恢复；
情况二，执行"git rm filename",报错（已经有修改被暂存在index中），提示两种方法：
--cached(保留文件)， or -f（强制删除文件，包括本地和暂存区）。
①执行"git rm --cached filename",命令可执行，没报错。就是不知道发生了什么变化，
本地该文件还在，而且内容没被修改，但staged上对该文件的修改消失了，
而且git不追踪该文件了，提示untracked files，相当于这个文件没有被git add过一样。
②执行"git rm -f filename"命令时，此时是强制删除，
既清除了staged上的修改，还一并把本地文件给删除了,
相当"git rm --cached filename"+本地右键命令组合套装。那么此时能恢复吗，怎么恢复？
估计得去垃圾回收站瞅瞅了（啥也没有）。

